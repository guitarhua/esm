name: build

on:
  push:
    branches:    
      - master

jobs:
  build_test:

    runs-on: ubuntu-latest
    
    steps:

    - name: Prepare
      run: |
        sudo apt-get update
        sudo apt-get install libsox-dev

    - name: Checkout
      uses: actions/checkout@01aecccf739ca6ff86c0539fbc67a7a5007bbc81

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DESM_PLATFORM=test -DESM_BOARD=native ..

    - name: Build
      run: cmake --build build

    - name: Run
      run: |
        cd build
        set -ex
        wget https://github.com/mryndzionek/trace-decoder/releases/download/v1.2/trace-decoder
        chmod +x trace-decoder
        mkdir logs
        apps/blink/blink &
        sleep 1
        cat /tmp/esm > logs/blink.data
        ./trace-decoder -i file -m ../apps/blink/include/signals.h logs/blink.data +RTS -N2 > logs/blink.log
        apps/dpp/dpp &
        sleep 1
        cat /tmp/esm > logs/dpp.data
        ./trace-decoder -i file -m ../apps/dpp/include/signals.h logs/dpp.data +RTS -N2 > logs/dpp.log
        apps/smokers/smokers &
        sleep 1
        cat /tmp/esm > logs/smokers.data
        ./trace-decoder -i file -m ../apps/smokers/include/signals.h logs/smokers.data +RTS -N2 > logs/smokers.log
        ls -lh logs

    - uses: actions/upload-artifact@e7eefc491732c06d0ebbf4d4f49dcc25b4d2f3a8
      with:
        name: esm-test-logs
        path: build/logs

  build_linux:

    runs-on: ubuntu-latest
    
    steps:

    - name: Prepare
      run: |
        sudo apt-get update
        sudo apt-get install libsox-dev

    - name: Checkout
      uses: actions/checkout@01aecccf739ca6ff86c0539fbc67a7a5007bbc81

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug ..

    - name: Build
      run: cmake --build build

  build_arm:

    runs-on: ubuntu-latest
    
    steps:

    - name: Prepare
      run: |
        sudo apt-get update
        sudo apt-get install gcc-arm-none-eabi libnewlib-arm-none-eabi

    - name: Checkout
      uses: actions/checkout@01aecccf739ca6ff86c0539fbc67a7a5007bbc81

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DESM_PLATFORM=stm32 -DESM_BOARD=bluepill -DCMAKE_TOOLCHAIN_FILE=../platform/stm32/Toolchain.cmake -DKEYBOARD_NAME=atreus50 ..
        cmake -DCMAKE_BUILD_TYPE=Release -DESM_PLATFORM=stm32 -DESM_BOARD=bluepill -DCMAKE_TOOLCHAIN_FILE=../platform/stm32/Toolchain.cmake -DKEYBOARD_NAME=atreus50 ..

    - name: Build
      run: cmake --build build

    - name: Archive
      run:  |
        mkdir binaries
        find build/apps -type f \( -iname \*.elf -o -iname \*.bin -o -iname \*.map \) -exec cp {} binaries \;

    - uses: actions/upload-artifact@e7eefc491732c06d0ebbf4d4f49dcc25b4d2f3a8
      with:
        name: arm_binaries
        path: binaries
